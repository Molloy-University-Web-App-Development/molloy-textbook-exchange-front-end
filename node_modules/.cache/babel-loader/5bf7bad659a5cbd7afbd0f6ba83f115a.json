{"ast":null,"code":"// browser TextDecoder/TextEncoder\n\n/* eslint-env browser */\nconst TextDecoder = self.TextDecoder;\nconst TextEncoder = self.TextEncoder;\nexport { TextDecoder, TextEncoder };\nexport function stringToUint8Array(data) {\n  if (typeof data === 'string') {\n    // convert data to Uint8Array\n    return new TextEncoder().encode(data);\n  }\n\n  if (!(data instanceof Uint8Array)) {\n    throw new TypeError('\"data\" be a string or Uint8Array.');\n  }\n\n  return data;\n}","map":{"version":3,"names":["TextDecoder","self","TextEncoder","stringToUint8Array","data","encode","Uint8Array","TypeError"],"sources":["/Users/roberttineo/Documents/GitHub/molloy-textbook-exchange-front-end/node_modules/hashlink/util-browser.js"],"sourcesContent":["// browser TextDecoder/TextEncoder\n/* eslint-env browser */\nconst TextDecoder = self.TextDecoder;\nconst TextEncoder = self.TextEncoder;\nexport {TextDecoder, TextEncoder};\n\nexport function stringToUint8Array(data) {\n  if(typeof data === 'string') {\n    // convert data to Uint8Array\n    return new TextEncoder().encode(data);\n  }\n  if(!(data instanceof Uint8Array)) {\n    throw new TypeError('\"data\" be a string or Uint8Array.');\n  }\n  return data;\n}\n"],"mappings":"AAAA;;AACA;AACA,MAAMA,WAAW,GAAGC,IAAI,CAACD,WAAzB;AACA,MAAME,WAAW,GAAGD,IAAI,CAACC,WAAzB;AACA,SAAQF,WAAR,EAAqBE,WAArB;AAEA,OAAO,SAASC,kBAAT,CAA4BC,IAA5B,EAAkC;EACvC,IAAG,OAAOA,IAAP,KAAgB,QAAnB,EAA6B;IAC3B;IACA,OAAO,IAAIF,WAAJ,GAAkBG,MAAlB,CAAyBD,IAAzB,CAAP;EACD;;EACD,IAAG,EAAEA,IAAI,YAAYE,UAAlB,CAAH,EAAkC;IAChC,MAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;EACD;;EACD,OAAOH,IAAP;AACD"},"metadata":{},"sourceType":"module"}