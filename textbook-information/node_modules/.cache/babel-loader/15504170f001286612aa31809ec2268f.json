{"ast":null,"code":"import _toConsumableArray from \"/Users/roberttineo/Documents/GitHub/molloy-textbook-exchange-front-end/textbook-information/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/roberttineo/Documents/GitHub/molloy-textbook-exchange-front-end/textbook-information/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/roberttineo/Documents/GitHub/molloy-textbook-exchange-front-end/textbook-information/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\n\n/**\n * React Router DOM v6.4.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_enhanceManualRouteObjects, Router, useHref, createPath, useResolvedPath, useMatch, UNSAFE_DataRouterStateContext, useNavigate, useLocation, UNSAFE_DataRouterContext, UNSAFE_RouteContext, useMatches, useNavigation } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_DataStaticRouterContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createRouter, createBrowserHistory, createHashHistory, matchPath, invariant } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  var searchParams = createSearchParams(locationSearch);\n\n  var _iterator = _createForOfIteratorHelper(defaultSearchParams.keys()),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var key = _step.value;\n\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(function (value) {\n          searchParams.append(key, value);\n        });\n      }\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return searchParams;\n}\n\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  var method;\n  var action;\n  var encType;\n  var formData;\n\n  if (isFormElement(target)) {\n    var submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    var form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        var _iterator2 = _createForOfIteratorHelper(target),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n                name = _step2$value[0],\n                value = _step2$value[1];\n\n            formData.append(name, value);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      } else if (target != null) {\n        for (var _i = 0, _Object$keys = Object.keys(target); _i < _Object$keys.length; _i++) {\n          var _name = _Object$keys[_i];\n          formData.append(_name, target[_name]);\n        }\n      }\n    }\n  }\n\n  var _window$location = window.location,\n      protocol = _window$location.protocol,\n      host = _window$location.host;\n  var url = new URL(action, protocol + \"//\" + host);\n  return {\n    url: url,\n    method: method,\n    encType: encType,\n    formData: formData\n  };\n}\n\nvar _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n    _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n    _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\"]; //#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createBrowserRouter(routes, opts) {\n  var _window;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window = window) == null ? void 0 : _window.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  var _window2;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window2 = window) == null ? void 0 : _window2.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref) {\n  var basename = _ref.basename,\n      children = _ref.children,\n      window = _ref.window;\n  var historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref2) {\n  var basename = _ref2.basename,\n      children = _ref2.children,\n      window = _ref2.window;\n  var historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState3 = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref3) {\n  var basename = _ref3.basename,\n      children = _ref3.children,\n      history = _ref3.history;\n\n  var _React$useState5 = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      state = _React$useState6[0],\n      setState = _React$useState6[1];\n\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  var onClick = _ref4.onClick,\n      relative = _ref4.relative,\n      reloadDocument = _ref4.reloadDocument,\n      replace = _ref4.replace,\n      state = _ref4.state,\n      target = _ref4.target,\n      to = _ref4.to,\n      preventScrollReset = _ref4.preventScrollReset,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  var href = useHref(to, {\n    relative: relative\n  });\n  var internalOnClick = useLinkClickHandler(to, {\n    replace: replace,\n    state: state,\n    target: target,\n    preventScrollReset: preventScrollReset,\n    relative: relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nvar NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  var _ref5$ariaCurrent = _ref5[\"aria-current\"],\n      ariaCurrentProp = _ref5$ariaCurrent === void 0 ? \"page\" : _ref5$ariaCurrent,\n      _ref5$caseSensitive = _ref5.caseSensitive,\n      caseSensitive = _ref5$caseSensitive === void 0 ? false : _ref5$caseSensitive,\n      _ref5$className = _ref5.className,\n      classNameProp = _ref5$className === void 0 ? \"\" : _ref5$className,\n      _ref5$end = _ref5.end,\n      end = _ref5$end === void 0 ? false : _ref5$end,\n      styleProp = _ref5.style,\n      to = _ref5.to,\n      children = _ref5.children,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  var path = useResolvedPath(to);\n  var match = useMatch({\n    path: path.pathname,\n    end: end,\n    caseSensitive: caseSensitive\n  });\n  var routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  var nextLocation = routerState == null ? void 0 : routerState.navigation.location;\n  var nextPath = useResolvedPath(nextLocation || \"\");\n  var nextMatch = React.useMemo(function () {\n    return nextLocation ? matchPath({\n      path: path.pathname,\n      end: end,\n      caseSensitive: caseSensitive\n    }, nextPath.pathname) : null;\n  }, [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]);\n  var isPending = nextMatch != null;\n  var isActive = match != null;\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive: isActive,\n      isPending: isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  var style = typeof styleProp === \"function\" ? styleProp({\n    isActive: isActive,\n    isPending: isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive: isActive,\n    isPending: isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nvar Form = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nvar FormImpl = /*#__PURE__*/React.forwardRef(function (_ref6, forwardedRef) {\n  var reloadDocument = _ref6.reloadDocument,\n      replace = _ref6.replace,\n      _ref6$method = _ref6.method,\n      method = _ref6$method === void 0 ? defaultMethod : _ref6$method,\n      action = _ref6.action,\n      onSubmit = _ref6.onSubmit,\n      fetcherKey = _ref6.fetcherKey,\n      routeId = _ref6.routeId,\n      relative = _ref6.relative,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  var submit = useSubmitImpl(fetcherKey, routeId);\n  var formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  var formAction = useFormAction(action, {\n    relative: relative\n  });\n\n  var submitHandler = function submitHandler(event) {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    var submitter = event.nativeEvent.submitter;\n    submit(submitter || event.currentTarget, {\n      method: method,\n      replace: replace,\n      relative: relative\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  var getKey = _ref7.getKey,\n      storageKey = _ref7.storageKey;\n  useScrollRestoration({\n    getKey: getKey,\n    storageKey: storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  var _ref8 = _temp === void 0 ? {} : _temp,\n      target = _ref8.target,\n      replaceProp = _ref8.replace,\n      state = _ref8.state,\n      preventScrollReset = _ref8.preventScrollReset,\n      relative = _ref8.relative;\n\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to, {\n    relative: relative\n  });\n  return React.useCallback(function (event) {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      var replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace: replace,\n        state: state,\n        preventScrollReset: preventScrollReset,\n        relative: relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  var location = useLocation();\n  var searchParams = React.useMemo(function () {\n    return getSearchParamsForLocation(location.search, defaultSearchParamsRef.current);\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = React.useCallback(function (nextInit, navigateOptions) {\n    var newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, routeId) {\n  var dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useSubmitImpl must be used within a Data Router\") : invariant(false) : void 0;\n  var router = dataRouterContext.router;\n  var defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    var _getFormSubmissionInf = getFormSubmissionInfo(target, defaultAction, options),\n        method = _getFormSubmissionInf.method,\n        encType = _getFormSubmissionInf.encType,\n        formData = _getFormSubmissionInf.formData,\n        url = _getFormSubmissionInf.url;\n\n    var href = url.pathname + url.search;\n    var opts = {\n      replace: options.replace,\n      formData: formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for useFetcher()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\n\nfunction useFormAction(action, _temp2) {\n  var _ref9 = _temp2 === void 0 ? {} : _temp2,\n      relative = _ref9.relative;\n\n  var routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFormAction must be used inside a RouteContext\") : invariant(false) : void 0;\n\n  var _routeContext$matches = routeContext.matches.slice(-1),\n      _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),\n      match = _routeContext$matches2[0];\n\n  var resolvedAction = action != null ? action : \".\";\n  var path = useResolvedPath(resolvedAction, {\n    relative: relative\n  }); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n  var location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      var params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  var FetcherForm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nvar fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  var dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used within a Data Router\") : invariant(false) : void 0;\n  var router = dataRouterContext.router;\n  var route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used inside a RouteContext\") : invariant(false) : void 0;\n  var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n\n  var _React$useState7 = React.useState(function () {\n    return String(++fetcherId);\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 1),\n      fetcherKey = _React$useState8[0];\n\n  var _React$useState9 = React.useState(function () {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.Form()\") : invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 1),\n      Form = _React$useState10[0];\n\n  var _React$useState11 = React.useState(function () {\n    return function (href) {\n      !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No router available for fetcher.load()\") : invariant(false) : void 0;\n      !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.load()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href);\n    };\n  }),\n      _React$useState12 = _slicedToArray(_React$useState11, 1),\n      load = _React$useState12[0];\n\n  var submit = useSubmitImpl(fetcherKey, routeId);\n  var fetcher = router.getFetcher(fetcherKey);\n  var fetcherWithComponents = React.useMemo(function () {\n    return _extends({\n      Form: Form,\n      submit: submit,\n      load: load\n    }, fetcher);\n  }, [fetcher, Form, submit, load]);\n  React.useEffect(function () {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return function () {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  var state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetchers must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  return _toConsumableArray(state.fetchers.values());\n}\n\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  var _ref10 = _temp3 === void 0 ? {} : _temp3,\n      getKey = _ref10.getKey,\n      storageKey = _ref10.storageKey;\n\n  var location = useLocation();\n  var matches = useMatches();\n  var navigation = useNavigation();\n  var dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useScrollRestoration must be used within a DataRouterContext\") : invariant(false) : void 0;\n  var router = dataRouterContext.router;\n  var state = React.useContext(UNSAFE_DataRouterStateContext);\n  !(router != null && state != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useScrollRestoration must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  var restoreScrollPosition = state.restoreScrollPosition,\n      preventScrollReset = state.preventScrollReset; // Trigger manual scroll restoration while we're active\n\n  React.useEffect(function () {\n    window.history.scrollRestoration = \"manual\";\n    return function () {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on unload\n\n  useBeforeUnload(React.useCallback(function () {\n    if (navigation.state === \"idle\") {\n      var key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  React.useLayoutEffect(function () {\n    try {\n      var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {// no-op, use default empty object\n    }\n  }, [storageKey]); // Enable scroll restoration in the router\n\n  React.useLayoutEffect(function () {\n    var disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, function () {\n      return window.scrollY;\n    }, getKey);\n    return function () {\n      return disableScrollRestoration && disableScrollRestoration();\n    };\n  }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n\n  React.useLayoutEffect(function () {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    } // been here before, scroll to it\n\n\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    } // try to scroll to the hash\n\n\n    if (location.hash) {\n      var el = document.getElementById(location.hash.slice(1));\n\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    } // Opt out of scroll reset if this link requested it\n\n\n    if (preventScrollReset === true) {\n      return;\n    } // otherwise go to the top on new locations\n\n\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback) {\n  React.useEffect(function () {\n    window.addEventListener(\"beforeunload\", callback);\n    return function () {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"sources":["../dom.ts","../index.tsx"],"names":["defaultMethod","defaultEncType","object","isHtmlElement","event","target","isModifiedEvent","init","Array","value","memo","v","searchParams","createSearchParams","defaultSearchParams","getFormSubmissionInfo","defaultAction","options","isFormElement","submissionTrigger","method","action","encType","formData","isButtonElement","isInputElement","form","name","Object","host","window","url","protocol","basename","opts","history","createBrowserHistory","hydrationData","routes","enhanceManualRouteObjects","createHashHistory","historyRef","React","v5Compat","location","children","state","navigationType","navigator","HistoryRouter","Link","preventScrollReset","rest","ref","href","useHref","relative","internalOnClick","useLinkClickHandler","replace","onClick","reloadDocument","NavLink","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","path","useResolvedPath","match","useMatch","routerState","nextLocation","nextPath","nextMatch","matchPath","isPending","isActive","ariaCurrent","styleProp","to","Form","FormImpl","props","submit","useSubmitImpl","formMethod","formAction","useFormAction","submitHandler","onSubmit","submitter","ScrollRestoration","storageKey","useScrollRestoration","getKey","navigate","useNavigate","useLocation","shouldProcessLinkClick","replaceProp","createPath","defaultSearchParamsRef","getSearchParamsForLocation","setSearchParams","newSearchParams","nextInit","useSubmit","dataRouterContext","router","formEncType","routeId","routeContext","resolvedAction","params","FetcherForm","fetcherKey","fetcherId","useFetcher","route","String","createFetcherForm","fetcher","fetcherWithComponents","load","console","useFetchers","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","matches","useMatches","navigation","useNavigation","useBeforeUnload","key","sessionStorage","JSON","sessionPositions","disableScrollRestoration","restoreScrollPosition","el","document"],"mappings":"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","sourcesContent":["import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method, encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_DataStaticRouterContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to, { relative });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to);\n    let match = useMatch({ path: path.pathname, end, caseSensitive });\n\n    let routerState = React.useContext(DataRouterStateContext);\n    let nextLocation = routerState?.navigation.location;\n    let nextPath = useResolvedPath(nextLocation || \"\");\n    let nextMatch = React.useMemo(\n      () =>\n        nextLocation\n          ? matchPath(\n              { path: path.pathname, end, caseSensitive },\n              nextPath.pathname\n            )\n          : null,\n      [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]\n    );\n\n    let isPending = nextMatch != null;\n    let isActive = match != null;\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      submit(submitter || event.currentTarget, { method, replace, relative });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ninterface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useSubmitImpl must be used within a Data Router\"\n  );\n  let { router } = dataRouterContext;\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action ?? \".\";\n  let path = useResolvedPath(resolvedAction, { relative });\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(dataRouterContext, `useFetcher must be used within a Data Router`);\n  let { router } = dataRouterContext;\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, `useFetchers must be used within a DataRouterStateContext`);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useScrollRestoration must be used within a DataRouterContext\"\n  );\n  let { router } = dataRouterContext;\n  let state = React.useContext(DataRouterStateContext);\n\n  invariant(\n    router != null && state != null,\n    \"useScrollRestoration must be used within a DataRouterStateContext\"\n  );\n  let { restoreScrollPosition, preventScrollReset } = state;\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY\n      );\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {\n      // no-op, use default empty object\n    }\n  }, [storageKey]);\n\n  // Enable scroll restoration in the router\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router?.enableScrollRestoration(\n      savedScrollPositions,\n      () => window.scrollY,\n      getKey\n    );\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]);\n\n  // Restore scrolling when state.restoreScrollPosition changes\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    }\n\n    // been here before, scroll to it\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    }\n\n    // try to scroll to the hash\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    }\n\n    // Opt out of scroll reset if this link requested it\n    if (preventScrollReset === true) {\n      return;\n    }\n\n    // otherwise go to the top on new locations\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback: () => any): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n"]},"metadata":{},"sourceType":"module"}